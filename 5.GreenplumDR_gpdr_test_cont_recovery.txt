Greenplum Disaster Recovery - Continuous Recovery Test 및 output

1. Greenplum DR Incremental Recovery 테스트 
  1) 목적 
     - Full 백업/복구 후 WAL 로그를 이용한 복구
     - DR를 구성했을 때 Recovery Cluster에서 조회 가능(Read Only)
  2) 제약 사항
     - Greenplum 7.3+에서만 기능 지원
     - Recovery Cluster는 Read Only 모드 이기 때문에, DDL/DML 작업 불가(조회 전용)
     - continuous로 북구 하는 동안에는 Recovery Cluster 조회되지 않음. 
  3) 시나리오 
     - init : gpdr 구성 초기화 단계(첫 테스트일 경우 할 필요 없으나, 반복 테스트시에는 반드시 필요)
     - config: gpdr 구성 설정 - 초기화 이후에는 반드시 필요 
     - Full recovery : Continuous Recovery를 하기전 1회 복구
     - Continuous setup:  Recovery Cluster를 Read-Replica 설정, 이것이 적용되어야 조회가 가능함.
     - Continuous Recovery: 복구 시점 생성 후 그 시점까지 복구(조회 가능, DDL/DML 불가) - 2회 수행
  4) 수행 위치 및 실행 계획

DR Method  |    Primary Cluster                | Recovery Cluster     
--------------------------------------------------------------------------------------------------------------
Init.      | Delete the data folder in minio's |
           |       /gpdr bucket                | 
           | sh 0.1.gpdr_drop_backup.sh        |
           |                                   | sh 0.1.gpdr_drop_backup.sh    
           |                                   | psql -ef 0.2.gpdr_drop_check.sql
           |                                   | gpstop -af                            
---------------------------------------------------------------------------------------------------------------             
config     | gpdr configure backup             | 
           |  --config-file s3_config_file.yml |    
           |                                   | gpdr configure restore --config-file s3_config_file.yml 
           |                                   |      --recovery-cluster-config-file    
           |                                   |      recovery_cluster_config_file_gp7.yml
---------------------------------------------------------------------------------------------------------------             
Full       | psql -ef 0.2.gpdr_drop_check.sql  | 
Recovery   | psql -ef 1.1.gpdr_full_backup.sql |    
           | psql -ef 1.2.gpdr_full_check.sql  | 
           | gpdr backup --type full           |  
           | gpdr info backup                  | 
           |                                   | gpdr restore --type incr --restore-point 
           |                                   |       20241014-202012R_gpdr_full_backup 
           |                                   | gpdr info restore
           |                                   | 
------------------------------ --------------------------------------------------------------------------------
Continuous |                                   | gpdr read-replica enable
setup      |                                   | gpstart -a
           |                                   | psql -ef 1.2.gpdr_full_check.sql
------------------------------ --------------------------------------------------------------------------------
Continuous | psql -ef 2.1.gpdr_incr_backup.sql | 
Recovery   | psql -ef 2.2.gpdr_incr_check.sql  |
           | gpdr create-restore-point         | 
           | gpdr info backup                  | 
           | psql -ef 3.1.gpdr_cont_backup.sql |    
           | psql -ef 3.2.gpdr_cont_check.sql  |     
           | gpdr create-restore-point         | 
           | gpdr info backup                  | 
           |                                   | gpdr restore --type continuous --restore-point 
           |                                   |      20241014-205107R
           |                                   | gpdr info restore    
           |                                   | psql -ef 2.2.gpdr_incr_check.sql    
           |                                   |    
           |                                   | gpdr restore --type continuous --restore-point latest    
           |                                   | gpdr info restore 
           |                                   | psql -ef 3.2.gpdr_cont_check.sql    
--------------------------------------------------------------------------------------------------------------

2. 수행 명령어 및 결과 

2.1 초기화 및 설정

####################### 초기화 및 config ######### minio #########################
minio 웹콘솔로 접속하여, 기존에 백업 받았던 파일 삭제 
ex) http://172.16.65.3:9001

s3_config_file.yml 예제 파일 설정과 동일하게 구성했을 때 
gpdr 버킷의 하위디렉토리인 data 폴더 삭제, 단 최상단 버킷인 gpdr은 유지 
      s3_bucket: gpdr
      path: /data 

####################### 초기화 및 config  ######### primary cluster ###############
[gpadmin@cdw gpdr]$ pwd
/data/poc/gpdr
[gpadmin@cdw gpdr]$ ls
0.1.gpdr_drop_backup.sh  1.1.gpdr_full_backup.sql  2.1.gpdr_incr_backup.sql  3.1.gpdr_cont_backup.sql
0.2.gpdr_drop_check.sql  1.2.gpdr_full_check.sql   2.2.gpdr_incr_check.sql   3.2.gpdr_cont_check.sql
[gpadmin@cdw gpdr]$ sh 0.1.gpdr_drop_backup.sh
...
If you have previously set the environment, you must delete the backup setting path of minio.
In the current setting, you need to delete the /gpdr/data subdirectory of minio.
[gpadmin@cdw gpdr]$
[gpadmin@cdw gpdr]$ gpdr configure backup --config-file ~/gpconfigs/s3_config_file.yml        #<<<<<<<< COMMAND
20241014:20:17:06 gpdr:gpadmin:cdw:057883-[INFO]:-Configuring for backup
20241014:20:17:06 gpdr:gpadmin:cdw:057883-[INFO]:-Successfully created pgbackrest configuration files for backup at /usr/local/gpdr/configs for the GPDB primary cluster
20241014:20:17:08 gpdr:gpadmin:cdw:057883-[INFO]:-Creating pgbackrest stanzas for the GPDB primary cluster
20241014:20:17:10 gpdr:gpadmin:cdw:057883-[INFO]:-Successfully created stanzas for the GPDB primary cluster
20241014:20:17:10 gpdr:gpadmin:cdw:057883-[INFO]:-Configuring GPDB GUCs
20241014:20:17:20 gpdr:gpadmin:cdw:057883-[INFO]:-Successfully configured GPDB GUCs and enabled WAL archiving
20241014:20:17:23 gpdr:gpadmin:cdw:057883-[INFO]:-Successfully finished configuration steps for backup
[gpadmin@cdw gpdr]$
[gpadmin@cdw gpdr]$

####################### 초기화 및 config  ######### Recovery cluster ############### 
[gpadmin@cdwdr gpdr]$ pwd
/data/poc/gpdr
[gpadmin@cdwdr gpdr]$ ls
0.1.gpdr_drop_backup.sh  1.1.gpdr_full_backup.sql  2.1.gpdr_incr_backup.sql  3.1.gpdr_cont_backup.sql
0.2.gpdr_drop_check.sql  1.2.gpdr_full_check.sql   2.2.gpdr_incr_check.sql   3.2.gpdr_cont_check.sql
[gpadmin@cdwdr gpdr]$ sh 0.1.gpdr_drop_backup.sh
[gpadmin@cdwdr gpdr]$ psql -ef 0.2.gpdr_drop_check.sql           #<<<<<<<< COMMAND
Timing is on.
psql:0.2.gpdr_drop_check.sql:1: error: Did not find any relations.
psql:0.2.gpdr_drop_check.sql:2: error: Did not find any relations.
                       List of functions
 Schema | Name | Result data type | Argument data types | Type
--------+------+------------------+---------------------+------
(0 rows)

[gpadmin@cdwdr gpdr]$ 
[gpadmin@cdwdr gpdr]$ gpstop -af                                #<<<<<<<< COMMAND
20241014:20:16:17:217459 gpstop:cdwdr:gpadmin-[INFO]:-Starting gpstop with args: -af
...
20241014:20:16:20:217459 gpstop:cdwdr:gpadmin-[INFO]:-Database successfully shutdown with no errors reported
[gpadmin@cdwdr gpdr]$

[gpadmin@cdwdr gpdr]$  
[gpadmin@cdwdr gpdr]$ gpdr configure restore --config-file ~/gpconfigs/s3_config_file.yml --recovery-cluster-config-file ~/gpconfigs/recovery_cluster_config_file_gp7.yml #<<<<<<<< COMMAND
20241014:20:17:42 gpdr:gpadmin:cdwdr:220086-[INFO]:-Configuring restore
20241014:20:17:42 gpdr:gpadmin:cdwdr:220086-[INFO]:-Successfully created pgbackrest configuration files for restore at /usr/local/gpdr/configs for the GPDB recovery cluster
20241014:20:17:42 gpdr:gpadmin:cdwdr:220086-[INFO]:-Successfully finished configuration steps for restore
[gpadmin@cdwdr gpdr]$


2.2 Full Recovery Test

####################### Full Recovery  ######### Primary Cluster ###############
[gpadmin@cdw gpdr]$ psql -ef 0.2.gpdr_drop_check.sql        #<<<<<<<< COMMAND
Timing is on.
psql:0.2.gpdr_drop_check.sql:1: error: Did not find any relations.
psql:0.2.gpdr_drop_check.sql:2: error: Did not find any relations.
                       List of functions
 Schema | Name | Result data type | Argument data types | Type
--------+------+------------------+---------------------+------
(0 rows)

[gpadmin@cdw gpdr]$ psql -ef 1.1.gpdr_full_backup.sql        #<<<<<<<< COMMAND
create table public.gpdr_test_heap (id int, type text ) distributed by (id);
CREATE TABLE
create table public.gpdr_test_ao (id int, type text ) with (appendonly=true, compresstype=zstd, compresslevel=7)  distributed by (id);
CREATE TABLE
create table public.gpdr_test_replicated (id int, type text ) with (appendonly=true, compresstype=zstd, compresslevel=7)  distributed by (id);
CREATE TABLE
insert into public.gpdr_test_heap       select i, 'full_heap' from generate_series(1,100) i;
INSERT 0 100
insert into public.gpdr_test_ao         select i, 'full_ao' from generate_series(1,100) i;
INSERT 0 100
insert into public.gpdr_test_replicated select i, 'full_replicated' from generate_series(1,100) i;
INSERT 0 100

[gpadmin@cdw gpdr]$ psql -ef 1.2.gpdr_full_check.sql        #<<<<<<<< COMMAND
select type, count(*) cnt from public.gpdr_test_heap       group by type order by type;
   type    | cnt
-----------+-----
 full_heap | 100
select type, count(*) cnt from public.gpdr_test_ao         group by type order by type;
  type   | cnt
---------+-----
 full_ao | 100
select type, count(*) cnt from public.gpdr_test_replicated group by type order by type;
      type       | cnt
-----------------+-----
 full_replicated | 100


[gpadmin@cdw gpdr]$ gpdr backup --type full                 #<<<<<<<< COMMAND
20241014:20:19:52 gpdr:gpadmin:cdw:063890-[INFO]:-Backing up database
20241014:20:19:54 gpdr:gpadmin:cdw:063890-[INFO]:-Backup label: 20241014-201953F
20241014:20:20:12 gpdr:gpadmin:cdw:063890-[INFO]:-Creating checkpoint
20241014:20:20:12 gpdr:gpadmin:cdw:063890-[INFO]:-Creating restore point 20241014-202012R_gpdr_full_backup
20241014:20:20:12 gpdr:gpadmin:cdw:063890-[INFO]:-Switching WAL segment file
20241014:20:20:14 gpdr:gpadmin:cdw:063890-[INFO]:-Checking to see if restore point has been fully archived...
20241014:20:20:15 gpdr:gpadmin:cdw:063890-[INFO]:-Backup successfully completed
[gpadmin@cdw gpdr]$
[gpadmin@cdw gpdr]$
[gpadmin@cdw gpdr]$
[gpadmin@cdw gpdr]$ gpdr info backup                       #<<<<<<<< COMMAND
20241014:20:20:25 gpdr:gpadmin:cdw:065254-[INFO]:-Getting backup information from the repository
full backup: 20241014-201953F
   Restore Points:
      20241014-202012R_gpdr_full_backup: October 14 2024, 20:20:12

[gpadmin@cdw gpdr]$

####################### Full Recovery  ######### Recovery Cluster ##############
[gpadmin@cdwdr gpdr]$ ps -ef | grep postgres              #<<<<<<<< COMMAND
gpadmin   205664  188984  0 16:31 pts/0    00:00:00 grep --color=auto postgres
[gpadmin@cdwdr gpdr]$
[gpadmin@cdwdr gpdr]$ gpdr restore --type incr --restore-point 20241014-202012R_gpdr_full_backup  #<<<<<<<< COMMAND
20241014:20:20:41 gpdr:gpadmin:cdwdr:220154-[INFO]:-Restoring database cluster
20241014:20:20:43 gpdr:gpadmin:cdwdr:220154-[INFO]:-Successfully created pg_hba.conf files on coordinator and all primary segments.
20241014:20:20:43 gpdr:gpadmin:cdwdr:220154-[INFO]:-Waiting for all segments to replay WAL and shutdown...
20241014:20:21:44 gpdr:gpadmin:cdwdr:220154-[INFO]:-All segments are shut down
20241014:20:21:44 gpdr:gpadmin:cdwdr:220154-[INFO]:-Database cluster restore is successfully completed
[gpadmin@cdwdr gpdr]$ gpdr info restore
20241014:20:48:30 gpdr:gpadmin:cdwdr:220737-[INFO]:-Getting restore information

Latest Completed Restore Info
-----------------------------
Restore type:  incremental
Restore point: 20241014-202012R_gpdr_full_backup
Backup label:  20241014-201953F
Restore start: 2024-10-14 20:20:41
Restore stop:  2024-10-14 20:21:44

Current Restore Info
-----------------------------
 Segment ID |  Lag  |     Latest archived WAL    |     Last replayed WAL
----------------------------------------------------------------------------
     -1     |    0  |  000000010000000100000001  |  000000010000000100000001
      0     |    0  |  000000010000000000000038  |  000000010000000000000038
      1     |    0  |  000000010000000000000038  |  000000010000000000000038
      2     |    0  |  000000010000000000000038  |  000000010000000000000038
      3     |    0  |  000000010000000000000038  |  000000010000000000000038
[gpadmin@cdwdr gpdr]$


####################### Continuous Setup  ######### Primary Cluster ##############
[gpadmin@cdw gpdr]$ ## nothing to do

####################### Continuous Setup  ######### Recovery Cluster ##############
[gpadmin@cdwdr gpdr]$ 
[gpadmin@cdwdr gpdr]$ gpdr read-replica enable          #<<<<<<<< COMMAND
20241014:20:49:32 gpdr:gpadmin:cdwdr:220811-[INFO]:-Read Replica mode has been enabled.
20241014:20:49:32 gpdr:gpadmin:cdwdr:220811-[INFO]:-You can now run gpstart to start the recovery cluster in Read Replica mode.
20241014:20:49:32 gpdr:gpadmin:cdwdr:220811-[INFO]:-Make sure to export the following variables first:
20241014:20:49:32 gpdr:gpadmin:cdwdr:220811-[INFO]:-  export COORDINATOR_DATA_DIRECTORY=/data/coordinator/gpseg-1
20241014:20:49:32 gpdr:gpadmin:cdwdr:220811-[INFO]:-  export PGPORT=5432
20241014:20:49:32 gpdr:gpadmin:cdwdr:220811-[INFO]:-Read Replica mode was enabled successfully.
[gpadmin@cdwdr gpdr]$
[gpadmin@cdwdr gpdr]$ gpstart -a                        #<<<<<<<< COMMAND
20241014:20:49:41:220865 gpstart:cdwdr:gpadmin-[INFO]:-Starting gpstart with args: -a
...
20241014:20:49:42:220865 gpstart:cdwdr:gpadmin-[INFO]:-Database successfully started
[gpadmin@cdwdr gpdr]$
[gpadmin@cdwdr gpdr]$ psql -ef 1.2.gpdr_full_check.sql  #<<<<<<<< COMMAND
Timing is on.
select type, count(*) cnt from public.gpdr_test_heap       group by type order by type;
   type    | cnt
-----------+-----
 full_heap | 100
(1 row)

Time: 57.816 ms
select type, count(*) cnt from public.gpdr_test_ao         group by type order by type;
  type   | cnt
---------+-----
 full_ao | 100
(1 row)

Time: 10.750 ms
select type, count(*) cnt from public.gpdr_test_replicated group by type order by type;
      type       | cnt
-----------------+-----
 full_replicated | 100
(1 row)

Time: 7.115 ms
[gpadmin@cdwdr gpdr]$

####################### Continuous Recovery ######### Primary Cluster ##############
[gpadmin@cdw gpdr]$ psql -ef 2.1.gpdr_incr_backup.sql  #<<<<<<<< COMMAND
Timing is on.
insert into public.gpdr_test_heap       select i, 'incr_heap' from generate_series(101,200) i;
INSERT 0 100
Time: 41.116 ms
insert into public.gpdr_test_ao         select i, 'incr_ao' from generate_series(101,200) i;
INSERT 0 100
Time: 8.912 ms
insert into public.gpdr_test_replicated select i, 'incr_replicated' from generate_series(101,200) i;
INSERT 0 100
Time: 5.519 ms
create table public.gpdr_test_incr (id int, type text ) with (appendonly=true, compresstype=zstd, compresslevel=7)  distributed by (id);
CREATE TABLE
Time: 18.929 ms
insert into  public.gpdr_test_incr select i, 'incr_ddl_dml' from generate_series(101,200) i;
INSERT 0 100
Time: 5.976 ms
CREATE EXTENSION plpython3u;
CREATE EXTENSION
Time: 27.009 ms
CREATE OR REPLACE FUNCTION public.gpdr_plpy3_bool(a int) RETURNS boolean AS $$
# container: plc_python3_shared
    if (a > 0):
        return True
    else:
        return False
$$ LANGUAGE plpython3u;
CREATE FUNCTION
Time: 18.797 ms
select public.gpdr_plpy3_bool(-1);
 gpdr_plpy3_bool
-----------------
 f
(1 row)

Time: 1.110 ms
[gpadmin@cdw gpdr]$ psql -ef 2.2.gpdr_incr_check.sql      #<<<<<<<< COMMAND
Timing is on.
select type, count(*) cnt from public.gpdr_test_heap       group by type order by type;
   type    | cnt
-----------+-----
 full_heap | 100
 incr_heap | 100
(2 rows)

Time: 54.984 ms
select type, count(*) cnt from public.gpdr_test_ao         group by type order by type;
  type   | cnt
---------+-----
 full_ao | 100
 incr_ao | 100
(2 rows)

Time: 9.165 ms
select type, count(*) cnt from public.gpdr_test_replicated group by type order by type;
      type       | cnt
-----------------+-----
 full_replicated | 100
 incr_replicated | 100
(2 rows)

Time: 7.266 ms
select type, count(*) cnt from public.gpdr_test_incr       group by type order by type;
     type     | cnt
--------------+-----
 incr_ddl_dml | 100
(1 row)

Time: 8.580 ms
select public.gpdr_plpy3_bool(-1);
 gpdr_plpy3_bool
-----------------
 f
(1 row)

Time: 13.375 ms
[gpadmin@cdw gpdr]$
[gpadmin@cdw gpdr]$ gpdr create-restore-point          #<<<<<<<< COMMAND
20241014:20:51:06 gpdr:gpadmin:cdw:066421-[INFO]:-Creating consistent restore point
20241014:20:51:07 gpdr:gpadmin:cdw:066421-[INFO]:-Creating checkpoint
20241014:20:51:07 gpdr:gpadmin:cdw:066421-[INFO]:-Creating restore point 20241014-205107R
20241014:20:51:07 gpdr:gpadmin:cdw:066421-[INFO]:-Switching WAL segment file
20241014:20:51:23 gpdr:gpadmin:cdw:066421-[INFO]:-Checking to see if restore point has been fully archived...
20241014:20:51:24 gpdr:gpadmin:cdw:066421-[INFO]:-Consistent restore point was successfully created
[gpadmin@cdw gpdr]$
[gpadmin@cdw gpdr]$
[gpadmin@cdw gpdr]$ gpdr info backup                   #<<<<<<<< COMMAND
20241014:20:51:32 gpdr:gpadmin:cdw:066895-[INFO]:-Getting backup information from the repository
full backup: 20241014-201953F
   Restore Points:
      20241014-202012R_gpdr_full_backup: October 14 2024, 20:20:12
      20241014-205107R: October 14 2024, 20:51:07

[gpadmin@cdw gpdr]$
[gpadmin@cdw gpdr]$
[gpadmin@cdw gpdr]$ psql -ef 3.1.gpdr_cont_backup.sql  #<<<<<<<< COMMAND
Timing is on.
insert into public.gpdr_test_heap       select i, 'cont_heap' from generate_series(201,300) i;
INSERT 0 100
Time: 29.912 ms
insert into public.gpdr_test_ao         select i, 'cont_ao' from generate_series(201,300) i;
INSERT 0 100
Time: 7.176 ms
insert into public.gpdr_test_replicated select i, 'cont_replicated' from generate_series(201,300) i;
INSERT 0 100
Time: 5.117 ms
create table public.gpdr_test_cont (id int, type text ) with (appendonly=true, compresstype=zstd, compresslevel=7)  distributed by (id);
CREATE TABLE
Time: 15.340 ms
insert into  public.gpdr_test_cont select i, 'cont_ddl_dml' from generate_series(201,300) i;
INSERT 0 100
Time: 7.144 ms
create view public.gpdr_view as select * from public.gpdr_test_heap;
CREATE VIEW
Time: 6.258 ms
[gpadmin@cdw gpdr]$ psql -ef 3.2.gpdr_cont_check.sql   #<<<<<<<< COMMAND
Timing is on.
select type, count(*) cnt from public.gpdr_test_heap       group by type order by type;
   type    | cnt
-----------+-----
 cont_heap | 100
 full_heap | 100
 incr_heap | 100
(3 rows)

Time: 51.389 ms
select type, count(*) cnt from public.gpdr_test_ao         group by type order by type;
  type   | cnt
---------+-----
 cont_ao | 100
 full_ao | 100
 incr_ao | 100
(3 rows)

Time: 9.410 ms
select type, count(*) cnt from public.gpdr_test_replicated group by type order by type;
      type       | cnt
-----------------+-----
 cont_replicated | 100
 full_replicated | 100
 incr_replicated | 100
(3 rows)

Time: 7.130 ms
select type, count(*) cnt from public.gpdr_test_incr       group by type order by type;
     type     | cnt
--------------+-----
 incr_ddl_dml | 100
(1 row)

Time: 7.362 ms
select type, count(*) cnt from public.gpdr_view            group by type order by type;
   type    | cnt
-----------+-----
 cont_heap | 100
 full_heap | 100
 incr_heap | 100
(3 rows)

Time: 6.465 ms
[gpadmin@cdw gpdr]$ gpdr create-restore-point           #<<<<<<<< COMMAND
20241014:20:52:02 gpdr:gpadmin:cdw:066962-[INFO]:-Creating consistent restore point
20241014:20:52:02 gpdr:gpadmin:cdw:066962-[INFO]:-Creating checkpoint
20241014:20:52:02 gpdr:gpadmin:cdw:066962-[INFO]:-Creating restore point 20241014-205202R
20241014:20:52:02 gpdr:gpadmin:cdw:066962-[INFO]:-Switching WAL segment file
20241014:20:52:03 gpdr:gpadmin:cdw:066962-[INFO]:-Checking to see if restore point has been fully archived...
20241014:20:52:04 gpdr:gpadmin:cdw:066962-[INFO]:-Consistent restore point was successfully created
[gpadmin@cdw gpdr]$
[gpadmin@cdw gpdr]$
[gpadmin@cdw gpdr]$ gpdr info backup                    #<<<<<<<< COMMAND
20241014:20:52:13 gpdr:gpadmin:cdw:067423-[INFO]:-Getting backup information from the repository
full backup: 20241014-201953F
   Restore Points:
      20241014-202012R_gpdr_full_backup: October 14 2024, 20:20:12
      20241014-205107R: October 14 2024, 20:51:07
      20241014-205202R: October 14 2024, 20:52:02

[gpadmin@cdw gpdr]$


####################### Continuous Recovery ######### Recovery Cluster ##############
[gpadmin@cdwdr gpdr]$ gpdr restore --type continuous --restore-point  20241014-205107R
20241014:20:52:34 gpdr:gpadmin:cdwdr:220969-[INFO]:-Restoring database cluster
20241014:20:53:04 gpdr:gpadmin:cdwdr:220969-[INFO]:-All segments have reached the restore point
20241014:20:53:04 gpdr:gpadmin:cdwdr:220969-[INFO]:-Database cluster restore is successfully completed
[gpadmin@cdwdr gpdr]$ gpdr info restore
20241014:20:53:11 gpdr:gpadmin:cdwdr:221102-[INFO]:-Getting restore information

Latest Completed Restore Info
-----------------------------
Restore type:  continuous
Restore point: 20241014-205107R
Backup label:  20241014-201953F
Restore start: 2024-10-14 20:52:34
Restore stop:  2024-10-14 20:53:04

Current Restore Info
-----------------------------
 Segment ID |  Lag  |     Latest archived WAL    |     Last replayed WAL
----------------------------------------------------------------------------
     -1     |    1  |  000000010000000100000003  |  000000010000000100000002
      0     |    1  |  00000001000000000000003A  |  000000010000000000000039
      1     |    1  |  00000001000000000000003A  |  000000010000000000000039
      2     |    1  |  00000001000000000000003A  |  000000010000000000000039
      3     |    1  |  00000001000000000000003A  |  000000010000000000000039
[gpadmin@cdwdr gpdr]$
[gpadmin@cdwdr gpdr]$ psql -ef 2.2.gpdr_incr_check.sql      #<<<<<<<< COMMAND
Timing is on.
select type, count(*) cnt from public.gpdr_test_heap       group by type order by type;
   type    | cnt
-----------+-----
 full_heap | 100
 incr_heap | 100
(2 rows)

Time: 53.705 ms
select type, count(*) cnt from public.gpdr_test_ao         group by type order by type;
  type   | cnt
---------+-----
 full_ao | 100
 incr_ao | 100
(2 rows)

Time: 7.514 ms
select type, count(*) cnt from public.gpdr_test_replicated group by type order by type;
      type       | cnt
-----------------+-----
 full_replicated | 100
 incr_replicated | 100
(2 rows)

Time: 6.026 ms
select type, count(*) cnt from public.gpdr_test_incr       group by type order by type;
     type     | cnt
--------------+-----
 incr_ddl_dml | 100
(1 row)

Time: 5.576 ms
select public.gpdr_plpy3_bool(-1);
 gpdr_plpy3_bool
-----------------
 f
(1 row)

Time: 26.109 ms
[gpadmin@cdwdr gpdr]$
[gpadmin@cdwdr gpdr]$ gpdr restore --type continuous --restore-point latest   #<<<<<<<< COMMAND
20241014:20:53:44 gpdr:gpadmin:cdwdr:221179-[INFO]:-Restoring database cluster
20241014:20:53:44 gpdr:gpadmin:cdwdr:221179-[INFO]:-Restoring latest restore point: 20241014-205202R
20241014:20:54:14 gpdr:gpadmin:cdwdr:221179-[INFO]:-All segments have reached the restore point
20241014:20:54:14 gpdr:gpadmin:cdwdr:221179-[INFO]:-Database cluster restore is successfully completed
[gpadmin@cdwdr gpdr]$
[gpadmin@cdwdr gpdr]$ gpdr info restore
20241014:20:54:18 gpdr:gpadmin:cdwdr:221315-[INFO]:-Getting restore information

Latest Completed Restore Info
-----------------------------
Restore type:  continuous
Restore point: 20241014-205202R
Backup label:  20241014-201953F
Restore start: 2024-10-14 20:53:44
Restore stop:  2024-10-14 20:54:14

Current Restore Info
-----------------------------
 Segment ID |  Lag  |     Latest archived WAL    |     Last replayed WAL
----------------------------------------------------------------------------
     -1     |    0  |  000000010000000100000003  |  000000010000000100000003
      0     |    0  |  00000001000000000000003A  |  00000001000000000000003A
      1     |    0  |  00000001000000000000003A  |  00000001000000000000003A
      2     |    0  |  00000001000000000000003A  |  00000001000000000000003A
      3     |    0  |  00000001000000000000003A  |  00000001000000000000003A
[gpadmin@cdwdr gpdr]$  psql -ef 3.2.gpdr_cont_check.sql                      #<<<<<<<< COMMAND
select type, count(*) cnt from public.gpdr_test_heap       group by type order by type;
   type    | cnt
-----------+-----
 cont_heap | 100
 full_heap | 100
 incr_heap | 100

select type, count(*) cnt from public.gpdr_test_ao         group by type order by type;
  type   | cnt
---------+-----
 cont_ao | 100
 full_ao | 100
 incr_ao | 100

select type, count(*) cnt from public.gpdr_test_replicated group by type order by type;
      type       | cnt
-----------------+-----
 cont_replicated | 100
 full_replicated | 100
 incr_replicated | 100

select type, count(*) cnt from public.gpdr_test_incr       group by type order by type;
     type     | cnt
--------------+-----
 incr_ddl_dml | 100

select type, count(*) cnt from public.gpdr_view            group by type order by type;
   type    | cnt
-----------+-----
 cont_heap | 100
 full_heap | 100
 incr_heap | 100
[gpadmin@cdwdr gpdr]$