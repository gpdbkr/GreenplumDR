Greenplum Disaster Recovery - Incremental Recovery Test 및 output

1. Greenplum DR Incremental Recovery 테스트 
  1) 시나리오 
     - init : gpdr 구성 초기화 단계(첫 테스트일 경우 할 필요 없으나, 반복 테스트시에는 반드시 필요)
     - config: gpdr 구성 설정 - 초기화 이후에는 반드시 필요 
     - Full recovery : Incremental 복구 이전에 Full 복구
     - Incremental Recovery :  Full 복구 이후에 변경분에 대해서 Incremental 복구

  2) 수행 위치 및 실행 계획

DR Method  |    Primary Cluster                | Recovery Cluster     
--------------------------------------------------------------------------------------------------------------
Init.      | Delete the data folder in minio's |
           |       /gpdr bucket                | 
           | sh 0.1.gpdr_drop_backup.sh        |
           |                                   | sh 0.1.gpdr_drop_backup.sh    
           |                                   | psql -ef 0.2.gpdr_drop_check.sql
           |                                   | gpstop -af                            
---------------------------------------------------------------------------------------------------------------             
config     | gpdr configure backup             | 
           |  --config-file s3_config_file.yml |    
           |                                   | gpdr configure restore --config-file s3_config_file.yml 
           |                                   |      --recovery-cluster-config-file    
           |                                   |      recovery_cluster_config_file_gp7.yml
---------------------------------------------------------------------------------------------------------------             
Full       | psql -ef 0.2.gpdr_drop_check.sql  | 
Recovery   | psql -ef 1.1.gpdr_full_backup.sql |    
           | psql -ef 1.2.gpdr_full_check.sql  | 
           | gpdr backup --type full           |  
           | gpdr info backup                  | 
           |                                   | gpdr restore --type incr --restore-point 
           |                                   |       20241014-160821R_gpdr_full_backup 
           |                                   | 
--------------------------------------------------------------------------------------------------------------
Incremental| psql -ef 2.1.gpdr_incr_backup.sql | 
Recovery   | psql -ef 2.2.gpdr_incr_check.sql  |
           | gpdr backup --type incr           | 
           | gpdr info backup                  | 
           |                                   | gpdr restore --type incr --restore-point   
           |                                   |      20241014-163342R_gpdr_incr_backup
           |                                   | gpdr promote 
           |                                   | gpstart -a 
           |                                   | psql -ef 2.2.gpdr_incr_check.sql 
           |                                   | gpdr info restore
--------------------------------------------------------------------------------------------------------------

2. 수행 명령어 및 결과 

2.1 초기화 및 설정

####################### 초기화 및 config ######### minio #########################
minio 웹콘솔로 접속하여, 기존에 백업 받았던 파일 삭제 
ex) http://172.16.65.3:9001

s3_config_file.yml 예제 파일 설정과 동일하게 구성했을 때 
gpdr 버킷의 하위디렉토리인 data 폴더 삭제, 단 최상단 버킷인 gpdr은 유지 
      s3_bucket: gpdr
      path: /data 

####################### 초기화 및 config  ######### primary cluster ###############
[gpadmin@cdw gpdr]$ pwd
/data/poc/gpdr
[gpadmin@cdw gpdr]$ ls
0.1.gpdr_drop_backup.sh  1.1.gpdr_full_backup.sql  2.1.gpdr_incr_backup.sql  3.1.gpdr_cont_backup.sql
0.2.gpdr_drop_check.sql  1.2.gpdr_full_check.sql   2.2.gpdr_incr_check.sql   3.2.gpdr_cont_check.sql
[gpadmin@cdw gpdr]$ sh 0.1.gpdr_drop_backup.sh                                         #<<<<<<<< COMMAND
...
If you have previously set the environment, you must delete the backup setting path of minio.
In the current setting, you need to delete the /gpdr/data subdirectory of minio.
[gpadmin@cdw gpdr]$
[gpadmin@cdw gpdr]$ gpdr configure backup --config-file ~/gpconfigs/s3_config_file.yml #<<<<<<<< COMMAND
20241014:16:22:28 gpdr:gpadmin:cdw:033273-[INFO]:-Configuring for backup
20241014:16:22:29 gpdr:gpadmin:cdw:033273-[INFO]:-Successfully created pgbackrest configuration files for backup at /usr/local/gpdr/configs for the GPDB primary cluster
20241014:16:22:31 gpdr:gpadmin:cdw:033273-[INFO]:-Creating pgbackrest stanzas for the GPDB primary cluster
20241014:16:22:32 gpdr:gpadmin:cdw:033273-[INFO]:-Successfully created stanzas for the GPDB primary cluster
20241014:16:22:32 gpdr:gpadmin:cdw:033273-[INFO]:-Configuring GPDB GUCs
20241014:16:22:42 gpdr:gpadmin:cdw:033273-[INFO]:-Successfully configured GPDB GUCs and enabled WAL archiving
20241014:16:22:44 gpdr:gpadmin:cdw:033273-[INFO]:-Successfully finished configuration steps for backup
[gpadmin@cdw gpdr]$

####################### 초기화 및 config  ######### Recovery cluster ############### 
[gpadmin@cdwdr gpdr]$ pwd
/data/poc/gpdr
[gpadmin@cdwdr gpdr]$ ls
0.1.gpdr_drop_backup.sh  1.1.gpdr_full_backup.sql  2.1.gpdr_incr_backup.sql  3.1.gpdr_cont_backup.sql
0.2.gpdr_drop_check.sql  1.2.gpdr_full_check.sql   2.2.gpdr_incr_check.sql   3.2.gpdr_cont_check.sql
[gpadmin@cdwdr gpdr]$ sh 0.1.gpdr_drop_backup.sh                   #<<<<<<<< COMMAND
[gpadmin@cdwdr gpdr]$ psql -ef 0.2.gpdr_drop_check.sql             #<<<<<<<< COMMAND
Timing is on.
psql:0.2.gpdr_drop_check.sql:1: error: Did not find any relations.
psql:0.2.gpdr_drop_check.sql:2: error: Did not find any relations.
                       List of functions
 Schema | Name | Result data type | Argument data types | Type
--------+------+------------------+---------------------+------
(0 rows)

[gpadmin@cdwdr gpdr]$
[gpadmin@cdwdr gpdr]$ gpstop -af                                   #<<<<<<<< COMMAND
20241014:16:21:50:202455 gpstop:cdwdr:gpadmin-[INFO]:-Starting gpstop with args: -af
...
20241014:16:21:54:202455 gpstop:cdwdr:gpadmin-[INFO]:-Database successfully shutdown with no errors reported
[gpadmin@cdwdr gpdr]$  
[gpadmin@cdwdr gpdr]$ gpdr configure restore --config-file ~/gpconfigs/s3_config_file.yml --recovery-cluster-config-file ~/gpconfigs/recovery_cluster_config_file_gp7.yml
20241014:16:25:02 gpdr:gpadmin:cdwdr:205076-[INFO]:-Configuring restore
20241014:16:25:02 gpdr:gpadmin:cdwdr:205076-[INFO]:-Successfully created pgbackrest configuration files for restore at /usr/local/gpdr/configs for the GPDB recovery cluster
20241014:16:25:02 gpdr:gpadmin:cdwdr:205076-[INFO]:-Successfully finished configuration steps for restore
[gpadmin@cdwdr gpdr]$


####################### Full Recovery  ######### primary cluster ###############
[gpadmin@cdwdr gpdr]$ pwd  
/data/poc/gpdr
[gpadmin@cdwdr gpdr]$ ls   
0.1.gpdr_drop_backup.sh  1.1.gpdr_full_backup.sql  2.1.gpdr_incr_backup.sql  3.1.gpdr_cont_backup.sql
0.2.gpdr_drop_check.sql  1.2.gpdr_full_check.sql   2.2.gpdr_incr_check.sql   3.2.gpdr_cont_check.sql
[gpadmin@cdw gpdr]$
[gpadmin@cdw gpdr]$ psql -ef 0.2.gpdr_drop_check.sql              #<<<<<<<< COMMAND
Timing is on.
psql:0.2.gpdr_drop_check.sql:1: error: Did not find any relations.
psql:0.2.gpdr_drop_check.sql:2: error: Did not find any relations.
                       List of functions
 Schema | Name | Result data type | Argument data types | Type
--------+------+------------------+---------------------+------
(0 rows)

[gpadmin@cdw gpdr]$ psql -ef 1.1.gpdr_full_backup.sql             #<<<<<<<< COMMAND
create table public.gpdr_test_heap (id int, type text ) distributed by (id);
CREATE TABLE
create table public.gpdr_test_ao (id int, type text ) with (appendonly=true, compresstype=zstd, compresslevel=7)  distributed by (id);
CREATE TABLE
create table public.gpdr_test_replicated (id int, type text ) with (appendonly=true, compresstype=zstd, compresslevel=7)  distributed by (id);
CREATE TABLE
insert into public.gpdr_test_heap       select i, 'full_heap' from generate_series(1,100) i;
INSERT 0 100
insert into public.gpdr_test_ao         select i, 'full_ao' from generate_series(1,100) i;
INSERT 0 100
insert into public.gpdr_test_replicated select i, 'full_replicated' from generate_series(1,100) i;
INSERT 0 100

[gpadmin@cdw gpdr]$ psql -ef 1.2.gpdr_full_check.sql              #<<<<<<<< COMMAND
select type, count(*) cnt from public.gpdr_test_heap       group by type order by type;
   type    | cnt
-----------+-----
 full_heap | 100
select type, count(*) cnt from public.gpdr_test_ao         group by type order by type;
  type   | cnt
---------+-----
 full_ao | 100
select type, count(*) cnt from public.gpdr_test_replicated group by type order by type;
      type       | cnt
-----------------+-----
 full_replicated | 100
[gpadmin@cdw gpdr]$ gpdr backup --type full                       #<<<<<<<< COMMAND
20241014:16:26:48 gpdr:gpadmin:cdw:039329-[INFO]:-Backing up database
20241014:16:26:51 gpdr:gpadmin:cdw:039329-[INFO]:-Backup label: 20241014-162650F
20241014:16:27:05 gpdr:gpadmin:cdw:039329-[INFO]:-Creating checkpoint
20241014:16:27:05 gpdr:gpadmin:cdw:039329-[INFO]:-Creating restore point 20241014-162705R_gpdr_full_backup
20241014:16:27:05 gpdr:gpadmin:cdw:039329-[INFO]:-Switching WAL segment file
20241014:16:27:06 gpdr:gpadmin:cdw:039329-[INFO]:-Checking to see if restore point has been fully archived...
20241014:16:27:07 gpdr:gpadmin:cdw:039329-[INFO]:-Backup successfully completed
[gpadmin@cdw gpdr]$ gpdr info backup
20241014:16:27:15 gpdr:gpadmin:cdw:040689-[INFO]:-Getting backup information from the repository
full backup: 20241014-162650F
   Restore Points:
      20241014-162705R_gpdr_full_backup: October 14 2024, 16:27:05

[gpadmin@cdw gpdr]$

####################### Full Recovery  ######### Recovery cluster ###############
[gpadmin@cdwdr gpdr]$ ps -ef | grep postgres                     #<<<<<<<< COMMAND
gpadmin   205664  188984  0 16:31 pts/0    00:00:00 grep --color=auto postgres
[gpadmin@cdwdr gpdr]$
[gpadmin@cdwdr gpdr]$ gpdr restore --type incr --restore-point 20241014-162705R_gpdr_full_backup #<<<<<<<< COMMAND
20241014:16:29:12 gpdr:gpadmin:cdwdr:205138-[INFO]:-Restoring database cluster
20241014:16:29:14 gpdr:gpadmin:cdwdr:205138-[INFO]:-Successfully created pg_hba.conf files on coordinator and all primary segments.
20241014:16:29:14 gpdr:gpadmin:cdwdr:205138-[INFO]:-Waiting for all segments to replay WAL and shutdown...
20241014:16:29:44 gpdr:gpadmin:cdwdr:205138-[INFO]:-All segments are shut down
20241014:16:29:44 gpdr:gpadmin:cdwdr:205138-[INFO]:-Database cluster restore is successfully completed
[gpadmin@cdwdr gpdr]$

####################### Incremental Recovery  ######### primary cluster ###########
[gpadmin@cdw gpdr]$ pwd
/data/poc/gpdr
[gpadmin@cdw gpdr]$ ls
0.1.gpdr_drop_backup.sh  1.1.gpdr_full_backup.sql  2.1.gpdr_incr_backup.sql  3.1.gpdr_cont_backup.sql
0.2.gpdr_drop_check.sql  1.2.gpdr_full_check.sql   2.2.gpdr_incr_check.sql   3.2.gpdr_cont_check.sql
[gpadmin@cdw gpdr]$
[gpadmin@cdw gpdr]$ psql -ef 2.1.gpdr_incr_backup.sql            #<<<<<<<< COMMAND
Timing is on.
insert into public.gpdr_test_heap       select i, 'incr_heap' from generate_series(101,200) i;
INSERT 0 100
Time: 34.407 ms
insert into public.gpdr_test_ao         select i, 'incr_ao' from generate_series(101,200) i;
INSERT 0 100
Time: 8.026 ms
insert into public.gpdr_test_replicated select i, 'incr_replicated' from generate_series(101,200) i;
INSERT 0 100
Time: 5.451 ms
create table public.gpdr_test_incr (id int, type text ) with (appendonly=true, compresstype=zstd, compresslevel=7)  distributed by (id);
CREATE TABLE
Time: 20.521 ms
insert into  public.gpdr_test_incr select i, 'incr_ddl_dml' from generate_series(101,200) i;
INSERT 0 100
Time: 6.413 ms
CREATE EXTENSION plpython3u;
CREATE EXTENSION
Time: 54.369 ms
CREATE OR REPLACE FUNCTION public.gpdr_plpy3_bool(a int) RETURNS boolean AS $$
# container: plc_python3_shared
    if (a > 0):
        return True
    else:
        return False
$$ LANGUAGE plpython3u;
CREATE FUNCTION
Time: 12.642 ms
select public.gpdr_plpy3_bool(-1);
 gpdr_plpy3_bool
-----------------
 f
(1 row)

Time: 1.075 ms
[gpadmin@cdw gpdr]$ psql -ef 2.2.gpdr_incr_check.sql          #<<<<<<<< COMMAND
Timing is on.
select type, count(*) cnt from public.gpdr_test_heap       group by type order by type;
   type    | cnt
-----------+-----
 full_heap | 100
 incr_heap | 100
(2 rows)

Time: 50.320 ms
select type, count(*) cnt from public.gpdr_test_ao         group by type order by type;
  type   | cnt
---------+-----
 full_ao | 100
 incr_ao | 100
(2 rows)

Time: 8.288 ms
select type, count(*) cnt from public.gpdr_test_replicated group by type order by type;
      type       | cnt
-----------------+-----
 full_replicated | 100
 incr_replicated | 100
(2 rows)

Time: 7.034 ms
select type, count(*) cnt from public.gpdr_test_incr       group by type order by type;
     type     | cnt
--------------+-----
 incr_ddl_dml | 100
(1 row)

Time: 7.376 ms
select public.gpdr_plpy3_bool(-1);
 gpdr_plpy3_bool
-----------------
 f
(1 row)

Time: 12.417 ms
[gpadmin@cdw gpdr]$ gpdr backup --type incr                  #<<<<<<<< COMMAND
20241014:16:33:34 gpdr:gpadmin:cdw:040971-[INFO]:-Backing up database
20241014:16:33:36 gpdr:gpadmin:cdw:040971-[INFO]:-Backup label: 20241014-162650F_20241014-163335I
20241014:16:33:42 gpdr:gpadmin:cdw:040971-[INFO]:-Creating checkpoint
20241014:16:33:42 gpdr:gpadmin:cdw:040971-[INFO]:-Creating restore point 20241014-163342R_gpdr_incr_backup
20241014:16:33:42 gpdr:gpadmin:cdw:040971-[INFO]:-Switching WAL segment file
20241014:16:33:43 gpdr:gpadmin:cdw:040971-[INFO]:-Checking to see if restore point has been fully archived...
20241014:16:33:44 gpdr:gpadmin:cdw:040971-[INFO]:-Backup successfully completed
[gpadmin@cdw gpdr]$
[gpadmin@cdw gpdr]$ gpdr info backup                        #<<<<<<<< COMMAND
20241014:16:33:51 gpdr:gpadmin:cdw:042334-[INFO]:-Getting backup information from the repository
full backup: 20241014-162650F
   Restore Points:
      20241014-162705R_gpdr_full_backup: October 14 2024, 16:27:05

   incremental backup: 20241014-162650F_20241014-163335I
   Restore Points:
      20241014-163342R_gpdr_incr_backup: October 14 2024, 16:33:42



####################### Incremental Recovery  ######### Recovery cluster ###########
[gpadmin@cdwdr gpdr]$ ps -ef | grep postgres
gpadmin   205664  188984  0 16:31 pts/0    00:00:00 grep --color=auto postgres
[gpadmin@cdwdr gpdr]$
[gpadmin@cdwdr gpdr]$ gpdr restore --type incr --restore-point 20241014-163342R_gpdr_incr_backup   #<<<<<<<< COMMAND
20241014:16:36:05 gpdr:gpadmin:cdwdr:205668-[INFO]:-Restoring database cluster
20241014:16:36:06 gpdr:gpadmin:cdwdr:205668-[INFO]:-Successfully created pg_hba.conf files on coordinator and all primary segments.
20241014:16:36:06 gpdr:gpadmin:cdwdr:205668-[INFO]:-Waiting for all segments to replay WAL and shutdown...
20241014:16:36:36 gpdr:gpadmin:cdwdr:205668-[INFO]:-All segments are shut down
20241014:16:36:36 gpdr:gpadmin:cdwdr:205668-[INFO]:-Database cluster restore is successfully completed
[gpadmin@cdwdr gpdr]$ gpdr promote
20241014:16:40:25 gpdr:gpadmin:cdwdr:206195-[INFO]:-Promoting recovery cluster
20241014:16:40:25 gpdr:gpadmin:cdwdr:206195-[INFO]:-Waiting for all segments to start up
20241014:16:40:35 gpdr:gpadmin:cdwdr:206195-[INFO]:-All segments are ready
20241014:16:40:40 gpdr:gpadmin:cdwdr:206195-[INFO]:-All segments are shut down
20241014:16:40:40 gpdr:gpadmin:cdwdr:206195-[INFO]:-Cluster has been successfully promoted.
20241014:16:40:40 gpdr:gpadmin:cdwdr:206195-[INFO]:-You can now run gpstart to start the cluster.
20241014:16:40:40 gpdr:gpadmin:cdwdr:206195-[INFO]:-Export the following variables:
20241014:16:40:40 gpdr:gpadmin:cdwdr:206195-[INFO]:-  export COORDINATOR_DATA_DIRECTORY=/data/coordinator/gpseg-1
20241014:16:40:40 gpdr:gpadmin:cdwdr:206195-[INFO]:-  export PGPORT=5432
20241014:16:40:40 gpdr:gpadmin:cdwdr:206195-[INFO]:-Successfully promoted the recovery cluster
[gpadmin@cdwdr gpdr]$ gpstart -a
20241014:16:41:01:206442 gpstart:cdwdr:gpadmin-[INFO]:-Starting gpstart with args: -a
...
20241014:16:41:02:206442 gpstart:cdwdr:gpadmin-[INFO]:-Database successfully started

[gpadmin@cdwdr gpdr]$ psql -ef 2.2.gpdr_incr_check.sql             #<<<<<<<< COMMAND
select type, count(*) cnt from public.gpdr_test_heap       group by type order by type;
   type    | cnt
-----------+-----
 full_heap | 100
 incr_heap | 100

select type, count(*) cnt from public.gpdr_test_ao         group by type order by type;
  type   | cnt
---------+-----
 full_ao | 100
 incr_ao | 100

select type, count(*) cnt from public.gpdr_test_replicated group by type order by type;
      type       | cnt
-----------------+-----
 full_replicated | 100
 incr_replicated | 100

select type, count(*) cnt from public.gpdr_test_incr       group by type order by type;
     type     | cnt
--------------+-----
 incr_ddl_dml | 100

select public.gpdr_plpy3_bool(-1);
 gpdr_plpy3_bool
-----------------
 f

[gpadmin@cdwdr gpdr]$ gpdr info restore                           #<<<<<<<< COMMAND
20241014:16:42:07 gpdr:gpadmin:cdwdr:206797-[INFO]:-Getting restore information

Latest Completed Restore Info
-----------------------------
Restore type:  incremental
Restore point: 20241014-163342R_gpdr_incr_backup
Backup label:  20241014-162650F_20241014-163335I
Restore start: 2024-10-14 16:36:05
Restore stop:  2024-10-14 16:36:36

[gpadmin@cdwdr gpdr]$







